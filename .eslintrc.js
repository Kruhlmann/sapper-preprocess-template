/**
 * File .eslintrc.js created on 25-05-2020.
 * Last modified on 2020-05-26T00:08:02 CEST
 *
 * @fileoverview ESLint configuration
 * @license GPL-3.0-or-later
 * @author Andreas Kr√ºhlmann <echo "YW5kcmVhc0BrcnVobG1hbm4uZGV2Cg==" | base64 -d>
 * @since 0.0.1
 * @format
 */

const OFF = 0;
const WARN = 1;
const ERROR = 2;

module.exports = {
    parser: "@typescript-eslint/parser",
    env: {
        es6: true,
        jasmine: true,
        commonjs: true,
        browser: true,
    },
    extends: "eslint:recommended",
    parserOptions: {
        ecmaVersion: 2019,
        sourceType: "module",
    },
    plugins: ["svelte3"],
    overrides: [
        {
            files: ["*.svelte"],
            processor: "svelte3/svelte3",
        },
    ],
    rules: {
        "no-unexpected-multiline": WARN,
        "accessor-pairs": [
            ERROR,
            {
                getWithoutSet: false,
                setWithoutGet: true,
            },
        ],
        "block-scoped-var": WARN,
        "consistent-return": ERROR,
        curly: ERROR,
        "default-case": WARN,
        "dot-location": [WARN, "property"],
        "dot-notation": WARN,
        eqeqeq: [ERROR, "smart"],
        "guard-for-in": WARN,
        "no-alert": ERROR,
        "no-caller": ERROR,
        "no-case-declarations": WARN,
        "no-div-regex": WARN,
        "no-else-return": WARN,
        "no-empty-pattern": WARN,
        "no-eq-null": WARN,
        "no-eval": ERROR,
        "no-extend-native": ERROR,
        "no-extra-bind": WARN,
        "no-floating-decimal": WARN,
        "no-implicit-coercion": [
            WARN,
            {
                boolean: true,
                number: true,
                string: true,
            },
        ],
        "no-implied-eval": ERROR,
        "no-invalid-this": ERROR,
        "no-iterator": ERROR,
        "no-labels": WARN,
        "no-lone-blocks": WARN,
        "no-loop-func": ERROR,
        "no-magic-numbers": WARN,
        "no-multi-spaces": ERROR,
        "no-multi-str": WARN,
        "no-native-reassign": ERROR,
        "no-new-func": ERROR,
        "no-new-wrappers": ERROR,
        "no-new": ERROR,
        "no-octal-escape": ERROR,
        "no-param-reassign": ERROR,
        "no-process-env": WARN,
        "no-proto": ERROR,
        "no-redeclare": ERROR,
        "no-return-assign": ERROR,
        "no-script-url": ERROR,
        "no-self-compare": ERROR,
        "no-throw-literal": ERROR,
        "no-unused-expressions": ERROR,
        "no-useless-call": ERROR,
        "no-useless-concat": ERROR,
        "no-void": WARN,
        "no-warning-comments": [
            WARN,
            {
                terms: ["TODO", "FIXME", "HACK"],
                location: "start",
            },
        ],
        "no-with": WARN,
        radix: WARN,
        "vars-on-top": ERROR,
        "init-declarations": [ERROR, "always"],
        "no-catch-shadow": WARN,
        "no-delete-var": ERROR,
        "no-label-var": ERROR,
        "no-shadow-restricted-names": ERROR,
        "no-shadow": WARN,
        // We require all vars to be initialized (see init-declarations)
        // If we NEED a var to be initialized to undefined, it needs to be explicit
        "no-undef-init": OFF,
        "no-undef": ERROR,
        "no-undefined": OFF,
        "no-unused-vars": WARN,
        // Disallow hoisting - let & const don't allow hoisting anyhow
        "no-use-before-define": ERROR,

        // Node.js and CommonJS
        "callback-return": [WARN, ["callback", "next"]],
        "global-require": ERROR,
        "handle-callback-err": WARN,
        "no-mixed-requires": WARN,
        "no-new-require": ERROR,
        // Use path.concat instead
        "no-path-concat": ERROR,
        "no-process-exit": ERROR,
        "no-restricted-modules": OFF,
        "no-sync": WARN,

        // ECMAScript 6 support
        "arrow-body-style": [ERROR, "always"],
        "arrow-parens": [ERROR, "always"],
        "arrow-spacing": [ERROR, { before: true, after: true }],
        "constructor-super": ERROR,
        "generator-star-spacing": [ERROR, "before"],
        "no-confusing-arrow": ERROR,
        "no-class-assign": ERROR,
        "no-const-assign": ERROR,
        "no-dupe-class-members": ERROR,
        "no-this-before-super": ERROR,
        "no-var": WARN,
        "object-shorthand": [WARN, "never"],
        "prefer-arrow-callback": WARN,
        "prefer-spread": WARN,
        "prefer-template": WARN,
        "require-yield": ERROR,

        // Stylistic - everything here is a warning because of style.
        "array-bracket-spacing": OFF,
        "block-spacing": [WARN, "always"],
        "brace-style": [WARN, "1tbs", { allowSingleLine: false }],
        camelcase: OFF,
        "comma-spacing": [WARN, { before: false, after: true }],
        "comma-style": [WARN, "last"],
        "computed-property-spacing": [WARN, "never"],
        "consistent-this": [WARN, "self"],
        "eol-last": [WARN, "always"],
        "func-names": WARN,
        "func-style": [WARN, "declaration"],
        "id-length": [WARN, { min: 2, max: 32 }],
        indent: [WARN, 4],
        "jsx-quotes": [WARN, "prefer-double"],
        "linebreak-style": [WARN, "unix"],
        "lines-around-comment": [WARN, { beforeBlockComment: true }],
        "max-depth": [WARN, 8],
        "max-len": [WARN, 80],
        "max-nested-callbacks": [WARN, 8],
        "max-params": [WARN, 8],
        "new-cap": WARN,
        "new-parens": WARN,
        "no-array-constructor": WARN,
        "no-bitwise": ERROR,
        "no-continue": ERROR,
        "no-inline-comments": WARN,
        "no-lonely-if": WARN,
        "no-mixed-spaces-and-tabs": WARN,
        "no-multiple-empty-lines": WARN,
        "no-negated-condition": OFF,
        "no-nested-ternary": WARN,
        "no-new-object": WARN,
        "no-plusplus": OFF,
        "no-spaced-func": WARN,
        "no-ternary": OFF,
        "no-trailing-spaces": WARN,
        "no-underscore-dangle": WARN,
        "no-unneeded-ternary": WARN,
        "object-curly-spacing": [WARN, "always"],
        "one-var": OFF,
        "operator-assignment": [WARN, "never"],
        "operator-linebreak": [WARN, "after"],
        "padded-blocks": [WARN, "never"],
        "quote-props": [WARN, "consistent-as-needed"],
        quotes: [WARN, "double"],
        "require-jsdoc": [
            WARN,
            {
                require: {
                    FunctionDeclaration: true,
                    MethodDefinition: true,
                    ClassDeclaration: false,
                },
            },
        ],
        "semi-spacing": [WARN, { before: false, after: true }],
        semi: [ERROR, "always"],
        "sort-vars": OFF,
        "space-before-blocks": [WARN, "always"],
        "space-before-function-paren": [WARN, "never"],
        "space-in-parens": [WARN, "never"],
        "space-infix-ops": [WARN, { int32Hint: true }],
        "space-unary-ops": ERROR,
        "spaced-comment": [WARN, "always"],
        "wrap-regex": WARN,
    },
};
